name: CI ðŸš§

on:
  push:
    paths:
      - "**.go"
      - "**.mod"

env:
  GO_VERSION: stable
  GOLANGCI_LINT_VERSION: v1.64

jobs:
  detect-modules:
    name: Detect modules ðŸ“¦
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      modules: ${{ steps.set-modules.outputs.modules }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Set modules
        id: set-modules
        run: echo "modules=$(go list -m -json | jq -s '.' | jq -c '[.[].Dir]')" >> $GITHUB_OUTPUT

  test:
    name: Test ðŸ§ª
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Generate test coverage
        run: go test ./... -coverprofile=./coverage.txt -covermode=atomic -coverpkg=./...

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: Lint ðŸŽ¨
    runs-on: ubuntu-latest
    needs: detect-modules
    permissions:
      contents: read
      checks: write
      pull-requests: read
    strategy:
      matrix:
        modules: ${{ fromJSON(needs.detect-modules.outputs.modules) }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Lint ${{ matrix.modules }}
        uses: golangci/golangci-lint-action@v6
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}
          working-directory: ${{ matrix.modules }}